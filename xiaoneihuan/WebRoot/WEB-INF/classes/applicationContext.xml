<?xml version="1.0" encoding="utf-8"  ?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-2.5.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">

	<context:component-scan base-package="com.xiaoneihuan.controller" use-default-filters="false">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<!-- 配置数据源 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		
			
		<property name="url" value="jdbc:mysql://127.0.0.1:3306/xiaoneihuan?useUnicode=true&amp;characterEncoding=utf-8" />
		<property name="username" value="root" /> 
		<property name="password" value="123" /> 
		<!-- 连接池启动时的初始值 -->
		<property name="initialSize" value="3" />
		<!-- 连接池的最大值 -->
		<property name="maxActive" value="500" />
		<!-- 最大空闲值.当经过一个高峰时间后，连接池可以慢慢将已经用不到的连接慢慢释放一部分，一直减少到maxIdle为止 -->
		<property name="maxIdle" value="2" />
		<!-- 最小空闲值.当空闲的连接数少于阀值时，连接池就会预申请去一些连接，以免洪峰来时来不及申请 -->
		<property name="minIdle" value="1" />
	</bean>

	<!-- 配置sessionfactory -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 接管了hibernate的对象映射文件 -->
		<property name="mappingResources">
			<list>
				<value>com/xiaoneihuan/domain/Users.hbm.xml</value>
				<value>com/xiaoneihuan/domain/Goods.hbm.xml</value>
				<value>com/xiaoneihuan/domain/Images.hbm.xml</value>
			</list>
		</property>
	    <property name="schemaUpdate">  
       		<value>true</value>  
       	</property>  
		<property name="hibernateProperties">
			<!-- 配置hibernate二级缓存 oscache ehcache hashtable -->
			<value> 
				hibernate.dialect=org.hibernate.dialect.MySQLDialect
				hibernate.show_sql=false
				hibernate.format_sql=false
				hibernate.cache.use_second_level_cache=true
				hibernate.cache.provider_class=org.hibernate.cache.EhCacheProvider
				hibernate.generate_statistics=true
				hibernate.hbm2ddl.auto=update
			</value>
		</property>
	</bean>
	
	<!-- 配置事务管理器 -->
	<bean id="txManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<tx:annotation-driven transaction-manager="txManager" /><!-- 还要在所需类里面注解一下 -->
	
	<!-- 配置Service对象 -->
	<bean id="userService" class="com.xiaoneihuan.service.imp.UserService">
	</bean>
	<bean id="goodsService" class="com.xiaoneihuan.service.imp.GoodsService">
	</bean>
	<bean id="imagesService" class="com.xiaoneihuan.service.imp.ImagesService">
	</bean>
	
	<!-- prototype 单实例模式 -->
	<bean name="/loginController"  class="com.xiaoneihuan.controller.LoginController" scope="prototype">
	</bean>
	
	<bean name="/goodsController"  class="com.xiaoneihuan.controller.GoodsController" scope="prototype">
	</bean>
	<bean name="/othersController"  class="com.xiaoneihuan.controller.OthersController" scope="prototype">
	</bean>
	<bean name="/userController"  class="com.xiaoneihuan.controller.UserController" scope="prototype">
	</bean>
</beans>
